{"ast":null,"code":"import _classCallCheck from \"/Users/habiburrehman/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/habiburrehman/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/habiburrehman/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/habiburrehman/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/habiburrehman/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/habiburrehman/test/src/Valid.js\";\nimport React, { Component } from 'react';\nimport './Valid.css';\n\nvar Valid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Valid, _Component);\n\n  function Valid(props) {\n    var _this;\n\n    _classCallCheck(this, Valid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Valid).call(this, props));\n    _this.state = {\n      // fields: {},\n      // errors: {},\n      email: ' ',\n      name: ' ',\n      emailerr: ' ',\n      nameerr: ''\n    };\n    return _this;\n  }\n\n  _createClass(Valid, [{\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var formIsValid = true;\n\n      if (typeof this.state.name !== \"undefined\") {\n        if (!this.state.name.match(/^[a-zA-Z]+$/)) {\n          formIsValid = false;\n          this.setState({\n            nameerr: \"Letters Only.\"\n          });\n        }\n      } //Email\n\n\n      if (!fields[\"email\"]) {\n        formIsValid = false;\n        this.setState({\n          emailerr: \"Cannot be empty\"\n        });\n      }\n\n      if (typeof fields[\"email\"] !== \"undefined\") {\n        var lastAtPos = fields[\"email\"].lastIndexOf('@');\n        var lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && fields[\"email\"].length - lastDotPos > 2)) {\n          formIsValid = false;\n          errors[\"email\"] = \"Email is not valid\";\n        }\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        refs: \"email\",\n        type: \"text\",\n        placeholder: \"Email\",\n        onChange: this.handleChange,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.state.errors[\"email\"]), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"fname\",\n        name: \"firstname\",\n        placeholder: \"Your name..\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Valid;\n}(Component);\n\nexport default Valid;","map":{"version":3,"sources":["/Users/habiburrehman/test/src/Valid.js"],"names":["React","Component","Valid","props","state","email","name","emailerr","nameerr","formIsValid","match","setState","fields","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","errors","e","handleChange","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACX;AACA;AACAC,MAAAA,KAAK,EAAE,GAHI;AAIXC,MAAAA,IAAI,EAAE,GAJK;AAKXC,MAAAA,QAAQ,EAAE,GALC;AAMXC,MAAAA,OAAO,EAAE;AANE,KAAb;AAFiB;AAUlB;;;;uCAEkB;AACjB,UAAIC,WAAW,GAAG,IAAlB;;AACE,UAAG,OAAO,KAAKL,KAAL,CAAWE,IAAlB,KAA2B,WAA9B,EAA0C;AACvC,YAAG,CAAC,KAAKF,KAAL,CAAWE,IAAX,CAAgBI,KAAhB,CAAsB,aAAtB,CAAJ,EAAyC;AACtCD,UAAAA,WAAW,GAAG,KAAd;AACA,eAAKE,QAAL,CAAc;AAACH,YAAAA,OAAO,EAAE;AAAV,WAAd;AACF;AACH,OAPc,CASf;;;AACA,UAAG,CAACI,MAAM,CAAC,OAAD,CAAV,EAAoB;AACjBH,QAAAA,WAAW,GAAG,KAAd;AACA,aAAKE,QAAL,CAAc;AAACJ,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACF;;AAED,UAAG,OAAOK,MAAM,CAAC,OAAD,CAAb,KAA2B,WAA9B,EAA0C;AACvC,YAAIC,SAAS,GAAGD,MAAM,CAAC,OAAD,CAAN,CAAgBE,WAAhB,CAA4B,GAA5B,CAAhB;AACA,YAAIC,UAAU,GAAGH,MAAM,CAAC,OAAD,CAAN,CAAgBE,WAAhB,CAA4B,GAA5B,CAAjB;;AAEA,YAAI,EAAED,SAAS,GAAGE,UAAZ,IAA0BF,SAAS,GAAG,CAAtC,IAA2CD,MAAM,CAAC,OAAD,CAAN,CAAgBI,OAAhB,CAAwB,IAAxB,KAAiC,CAAC,CAA7E,IAAkFD,UAAU,GAAG,CAA/F,IAAqGH,MAAM,CAAC,OAAD,CAAN,CAAgBK,MAAhB,GAAyBF,UAA1B,GAAwC,CAA9I,CAAJ,EAAsJ;AACnJN,UAAAA,WAAW,GAAG,KAAd;AACAS,UAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,oBAAlB;AACD;AACL;;AAED,WAAKP,QAAL,CAAc;AAACO,QAAAA,MAAM,EAAEA;AAAT,OAAd;AACA,aAAOT,WAAP;AACH;;;iCAEaU,C,EAAE;AACX,WAAKR,QAAL;AACH;;;6BAEO;AACJ,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH,EAEG;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,MAAzB;AAAgC,QAAA,WAAW,EAAC,OAA5C;AAAoD,QAAA,QAAQ,EAAE,KAAKS,YAAnE;AAAiF,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,KAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,EAGG;AAAM,QAAA,KAAK,EAAE;AAACgB,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKjB,KAAL,CAAWc,MAAX,CAAkB,OAAlB,CAA9B,CAHH,EAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANH,EAOG;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,OAAtB;AAA8B,QAAA,IAAI,EAAC,WAAnC;AAA+C,QAAA,WAAW,EAAC,aAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPH,CADH;AAaH;;;;EA5DiBjB,S;;AA+DpB,eAAeC,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Valid.css';\n\nclass Valid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // fields: {},\n      // errors: {},\n      email: ' ',\n      name: ' ',\n      emailerr: ' ',\n      nameerr: '',\n    };\n  }\n\n  handleValidation() {\n    let formIsValid = true;\n      if(typeof this.state.name !== \"undefined\"){\n         if(!this.state.name.match(/^[a-zA-Z]+$/)){\n            formIsValid = false;\n            this.setState({nameerr: \"Letters Only.\"});\n         }        \n      }\n\n      //Email\n      if(!fields[\"email\"]){\n         formIsValid = false;\n         this.setState({emailerr: \"Cannot be empty\"});\n      }\n\n      if(typeof fields[\"email\"] !== \"undefined\"){\n         let lastAtPos = fields[\"email\"].lastIndexOf('@');\n         let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n         if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n            formIsValid = false;\n            errors[\"email\"] = \"Email is not valid\";\n          }\n     }  \n\n     this.setState({errors: errors});\n     return formIsValid;\n }\n\n  handleChange(e){         \n      this.setState();\n  }\n\n  render(){\n      return (\n         <div>\n            <label>Email</label>\n            <input refs=\"email\" type=\"text\" placeholder=\"Email\" onChange={this.handleChange} value={this.state.email}/>\n            <span style={{color: \"red\"}}>{this.state.errors[\"email\"]}</span>\n\n\n            <label>Name</label>\n            <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\"/>\n\n\n         </div>\n    )\n  }\n}\n\nexport default Valid;\n"]},"metadata":{},"sourceType":"module"}