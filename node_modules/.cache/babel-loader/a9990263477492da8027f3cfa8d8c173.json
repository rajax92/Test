{"ast":null,"code":"import _classCallCheck from \"/Users/habiburrehman/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/habiburrehman/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/habiburrehman/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/habiburrehman/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/habiburrehman/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/habiburrehman/test/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/habiburrehman/test/src/testCode.js\";\nimport * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nvar initialState = {\n  error: null,\n  // you could put error messages here if you wanted\n  person: {\n    firstname: \"\",\n    lastname: \"\"\n  }\n};\nexport var testCode =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(testCode, _React$Component);\n\n  function testCode(props) {\n    var _this;\n\n    _classCallCheck(this, testCode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(testCode).call(this, props));\n    _this.state = initialState; // make sure the \"this\" variable keeps its scope\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(testCode, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.state.error), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"firstname\",\n        value: this.state.person.firstname,\n        label: \"First Name\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        name: \"lastname\",\n        value: this.state.person.lastname,\n        label: \"Last Name\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Submit\"), \"/>\"));\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      console.log(\"when clicking, the form data is:\");\n      console.log(this.state.person);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event, newValue) {\n      event.persist(); // allow native event access (see: https://facebook.github.io/react/docs/events.html)\n      // give react a function to set the state asynchronously.\n      // here it's using the \"name\" value set on the TextField\n      // to set state.person.[firstname|lastname].            \n\n      this.setState(function (state) {\n        return state.person[event.target.name] = newValue;\n      });\n    }\n  }]);\n\n  return testCode;\n}(React.Component);\nexport default testCode;","map":{"version":3,"sources":["/Users/habiburrehman/test/src/testCode.js"],"names":["React","TextField","Button","initialState","error","person","firstname","lastname","testCode","props","state","handleChange","bind","onClick","console","log","event","newValue","persist","setState","target","name","Component"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AACJ;AACbC,EAAAA,MAAM,EAAE;AACJC,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AAFS,CAArB;AAQA,WAAaC,QAAb;AAAA;AAAA;AAAA;;AAEI,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAaP,YAAb,CAFe,CAGf;;AACA,UAAKQ,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,uDAAf;AALe;AAMlB;;AARL;AAAA;AAAA,6BAUa;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKF,KAAL,CAAWN,KAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,IAAI,EAAC,WADT;AAEI,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWL,MAAX,CAAkBC,SAF7B;AAGI,QAAA,KAAK,EAAC,YAHV;AAII,QAAA,QAAQ,EAAE,KAAKK,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI,oBAAC,SAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWL,MAAX,CAAkBE,QAF7B;AAGI,QAAA,KAAK,EAAC,WAHV;AAII,QAAA,QAAQ,EAAE,KAAKI,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CAFJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,OAdJ,CADJ;AAoBH;AA/BL;AAAA;AAAA,8BAiCc;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWL,MAAvB;AACH;AApCL;AAAA;AAAA,iCAsCiBW,KAtCjB,EAsCwBC,QAtCxB,EAsCwC;AAChCD,MAAAA,KAAK,CAACE,OAAN,GADgC,CACf;AACjB;AACA;AACA;;AACA,WAAKC,QAAL,CAAc,UAACT,KAAD;AAAA,eAAWA,KAAK,CAACL,MAAN,CAAaW,KAAK,CAACI,MAAN,CAAaC,IAA1B,IAAkCJ,QAA7C;AAAA,OAAd;AAEH;AA7CL;;AAAA;AAAA,EAA8BjB,KAAK,CAACsB,SAApC;AAgDA,eAAed,QAAf","sourcesContent":["import * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst initialState = {\n    error: null, // you could put error messages here if you wanted\n    person: {\n        firstname: \"\",\n        lastname: \"\"\n    }\n};\n\nexport class testCode extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n        // make sure the \"this\" variable keeps its scope\n        this.handleChange = this.handleChange.bind(this);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    render() {\n        return (\n            <div>\n                <div>{this.state.error}</div>\n                <div>\n                    <TextField\n                        name=\"firstname\"\n                        value={this.state.person.firstname}\n                        label=\"First Name\"\n                        onChange={this.handleChange}/>\n                    <TextField\n                        name=\"lastname\"\n                        value={this.state.person.lastname}\n                        label=\"Last Name\"\n                        onChange={this.handleChange}/>\n                </div>\n                <div>\n                    <Button onClick={this.onClick} >Submit</Button>/>\n                </div>\n            </div>\n        );\n    }\n\n    onClick() {\n        console.log(\"when clicking, the form data is:\");\n        console.log(this.state.person);\n    }\n\n    handleChange(event, newValue): void {\n        event.persist(); // allow native event access (see: https://facebook.github.io/react/docs/events.html)\n        // give react a function to set the state asynchronously.\n        // here it's using the \"name\" value set on the TextField\n        // to set state.person.[firstname|lastname].            \n        this.setState((state) => state.person[event.target.name] = newValue);\n\n    }\n\n}\nexport default testCode;\n"]},"metadata":{},"sourceType":"module"}